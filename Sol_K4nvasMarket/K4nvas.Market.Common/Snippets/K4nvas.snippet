<?xml version="1.0" encoding="utf-8"?>  
<CodeSnippets  
    xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">  
    <CodeSnippet Format="1.0.0">  
        <Header>  
          <Title>Export Interface</Title>  
          <Author>Richard Gómez</Author>  
          <Description>Export and PartCreationPolicy</Description>  
          <Shortcut>Snippet_Export</Shortcut>  
        </Header>
        <Snippet>
          <References>  
            <Reference>  
              <Assembly>System.ComponentModel.Composition</Assembly>  
            </Reference>   
          </References>  
          <Imports>
            <Import>
              <Namespace>System.ComponentModel.Composition</Namespace>
            </Import>
          </Imports>
          <Declarations>  
            <Literal>  
              <ID>InterfazView</ID>  
              <ToolTip>Interfaz de la Vista.</ToolTip>  
              <Default>"InterfazView"</Default>  
            </Literal>  
          </Declarations>  
            <Code Language="CSharp">  
                <![CDATA[[Export(typeof($InterfazView$))]
						 [PartCreationPolicy(CreationPolicy.NonShared)] ]]>  
            </Code>  
        </Snippet>  
    </CodeSnippet>  
	
	<CodeSnippet Format="1.0.0">  
        <Header>  
          <Title>Regions ViewModel</Title>  
          <Author>Richard Gómez</Author>  
          <Description>Create Regions (Entities, Commands and Methods)</Description>  
          <Shortcut>Snippet_RegionsVM</Shortcut>  
        </Header>
        <Snippet>
            <Code Language="CSharp">  
                <![CDATA[        #region Entities

        #endregion

        #region Commands

        #endregion

        #region Methods

        #endregion]]>  
            </Code>  
        </Snippet>  
    </CodeSnippet> 

 <CodeSnippet Format="1.0.0">  
        <Header>  
          <Title>Command and Method</Title>  
          <Author>Richard Gómez</Author>  
          <Description>Create Command and Method</Description>  
          <Shortcut>Snippet_Command</Shortcut>  
        </Header>
        <Snippet> 
          <Imports>
            <Import>
              <Namespace>System.Windows.Input</Namespace>
            </Import>
			<Import>
              <Namespace>Microsoft.Practices.Prism.Commands</Namespace>
            </Import>
          </Imports>
          <Declarations>  
            <Literal>  
              <ID>NombreMetodo</ID>  
              <ToolTip>Nombre del Método</ToolTip>  
              <Default>NombreMetodo</Default>  
            </Literal>  
          </Declarations>  
            <Code Language="CSharp">  
                <![CDATA[public ICommand Command$NombreMetodo$
        {
            get { return new DelegateCommand($NombreMetodo$Command); }
        }

        private void $NombreMetodo$Command()
        {
            throw new NotImplementedException();
        }]]>  
            </Code>  
        </Snippet>  
    </CodeSnippet>  

<CodeSnippet Format="1.0.0">  
        <Header>  
          <Title>Import ViewModel</Title>  
          <Author>Richard Gómez</Author>  
          <Description>Create Binding between View and ViewModel</Description>  
          <Shortcut>Snippet_ImportVM</Shortcut>  
        </Header>
        <Snippet>
          <References>  
            <Reference>  
              <Assembly>System.ComponentModel.Composition</Assembly>  
            </Reference>   
          </References>  
          <Imports>
            <Import>
              <Namespace>System.ComponentModel.Composition</Namespace>
            </Import>
          </Imports>
          <Declarations>  
            <Literal>  
              <ID>ViewModelInterface</ID>  
              <ToolTip>In</ToolTip>  
              <Default>ViewModelInterface</Default>  
            </Literal>  
          </Declarations>  
            <Code Language="CSharp">  
                <![CDATA[[Import]
        $ViewModelInterface$ ViewModel
        {
            get { return DataContext as $ViewModelInterface$; }
            set { this.DataContext = value; }
        }]]>  
            </Code>  
        </Snippet>  
    </CodeSnippet> 	
</CodeSnippets>  